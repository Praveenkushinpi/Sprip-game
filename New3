const player = "p";
const puff="h";
const customer ="c";
const wall ="w";
const wallh="d";
const oven="o";
const crosswall ="g"
const mouse="m"
setLegend(
  [ player,bitmap`
........00......
.......000......
........02......
........22......
......77777.....
......71157.....
......7151700...
...0.075517.0...
....0.71157.0...
......77777.....
.......0..0.....
.......0..0.....
......00.00.....
................
................
................`],
  [ puff,bitmap`
................
................
................
................
................
........66......
.......6666.....
......666666....
......116161....
......111111....
......11111.....
.......1111.....
................
................
................
................`],
  [customer,bitmap`
................
.........0......
........000.....
........0000....
........022.0...
........222..0..
.......99999....
.......99999....
.......99999....
.......9HHHH9...
.......9H9H999..
........0..0....
........0..0....
........0..0....
.......0...0....
..........0.....`],
  [oven,bitmap`
...00000000000..
...01111111110..
...01202020210..
...01020202010..
...01111111110..
...00000000000..
...03033033060..
...03063036030..
...06066066060..
...00000000000..
................
................
................
................
................
................`],
  [wall,bitmap`
.....0000000....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....000LLL0....
.....00LLLL0....
.....0000000....`],
  [wallh,bitmap`
................
................
................
................
................
0000000000000000
0000000000000000
1111111111011111
1111111111111111
1111111111111111
0111111111111111
0000000000000000
................
................
................
................`],
  [crosswall,bitmap`
....00000000....
....01111010....
....01111110....
....01111100....
....01111110....
0000011111100000
0011111111111110
0111111111111110
0111111111111110
0111111111111100
0111111111111110
0000011111100000
....01111110.0..
....01111110....
....01110010....
....00000000....`],
[mouse,bitmap`
................
................
................
................
......00........
.......0........
.......0........
......0.........
......0........0
.....000.......0
.....020.....00.
.....00000..0...
......000000....
......00000.....
.......0000.....
........0.0.....`]
);
//GLOBAL VARIABLES
var score = 0
var isSecretChallenge = false
//SCORE AND LIVES LABELS
addText(`Score: ${score}`,{x: 0, y: 0, color: color`1`})
addText(`   WASD to move\n   'i' to reset\n Collect puffs and\n navigate through\n the mazes to win!`, {x: 1, y:5, color: color`0`}) 
let level = 0
const levels = [
  map`
o..dddddddd
.h.........
.hh.....wm.
...w.......
...w....wm.
...w.......
...w....wm.
p..w.......
ooow.......
dddgg.c.c.c`,
  map`
pddddddg
......mw
dddg...w
...w.h.w
.w.w..mw
.w.w...w
.w.wm..w
.wow...w
.gdg...w
c....h.c`
];
const currentLevel = levels[level];
setMap(currentLevel);
setSolids([player,wall,wallh,crosswall])
setPushables({
  [ player ]: [puff]
})
  //INPUT
onInput("d", () => {
  getFirst(player).x += 1;
})
onInput("a", () => {
  getFirst(player).x -= 1;
})
onInput("w", () => {
  getFirst(player).y -= 1;
})
onInput("s", () => {
  getFirst(player).y += 1;
})
onInput("i", () => {
  resetGame()
})
afterInput(() => {
  const targetNumber = tilesWith(customer).length;
  const numberCovered = tilesWith(customer,puff).length
const player = "p";
const puff="h";
const customer ="c";
const wall ="w";
const wallh="d";
const oven="o";
const crosswall ="g"
const mouse="m"
setLegend(
  [ player,bitmap`
........00......
.......000......
........02......
........22......
......77777.....
......71157.....
......7151700...
...0.075517.0...
....0.71157.0...
......77777.....
.......0..0.....
.......0..0.....
......00.00.....
................
................
................`],
  [ puff,bitmap`
................
................
................
................
................
........66......
.......6666.....
......666666....
......116161....
......111111....
......11111.....
.......1111.....
................
................
................
................`],
  [customer,bitmap`
................
.........0......
........000.....
........0000....
........022.0...
........222..0..
.......99999....
.......99999....
.......99999....
.......9HHHH9...
.......9H9H999..
........0..0....
........0..0....
........0..0....
.......0...0....
..........0.....`],
  [oven,bitmap`
...00000000000..
...01111111110..
...01202020210..
...01020202010..
...01111111110..
...00000000000..
...03033033060..
...03063036030..
...06066066060..
...00000000000..
................
................
................
................
................
................`],
  [wall,bitmap`
.....0000000....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....000LLL0....
.....00LLLL0....
.....0000000....`],
  [wallh,bitmap`
................
................
................
................
................
0000000000000000
0000000000000000
1111111111011111
1111111111111111
1111111111111111
0111111111111111
0000000000000000
................
................
................
................`],
  [crosswall,bitmap`
....00000000....
....01111010....
....01111110....
....01111100....
....01111110....
0000011111100000
0011111111111110
0111111111111110
0111111111111110
0111111111111100
0111111111111110
0000011111100000
....01111110.0..
....01111110....
....01110010....
....00000000....`],
[mouse,bitmap`
................
................
................
................
......00........
.......0........
.......0........
......0.........
......0........0
.....000.......0
.....020.....00.
.....00000..0...
......000000....
......00000.....
.......0000.....
........0.0.....`]
);
//GLOBAL VARIABLES
var score = 0
var isSecretChallenge = false
//SCORE AND LIVES LABELS
addText(`Score: ${score}`,{x: 0, y: 0, color: color`1`})
addText(`   WASD to move\n   'i' to reset\n Collect puffs and\n navigate through\n the mazes to win!`, {x: 1, y:5, color: color`0`}) 
let level = 0
const levels = [
  map`
o..dddddddd
.h.........
.hh.....wm.
...w.......
...w....wm.
...w.......
...w....wm.
p..w.......
ooow.......
dddgg.c.c.c`,
  map`
pddddddg
......mw
dddg...w
...w.h.w
.w.w..mw
.w.w...w
.w.wm..w
.wow...w
.gdg...w
c....h.c`
];
const currentLevel = levels[level];
setMap(currentLevel);
setSolids([player,wall,wallh,crosswall])
setPushables({
  [ player ]: [puff]
})
  //INPUT
onInput("d", () => {
  getFirst(player).x += 1;
})
onInput("a", () => {
  getFirst(player).x -= 1;
})
onInput("w", () => {
  getFirst(player).y -= 1;
})
onInput("s", () => {
  getFirst(player).y += 1;
})
onInput("i", () => {
  resetGame()
})
afterInput(() => {
  const targetNumber = tilesWith(customer).length;
  const numberCovered = tilesWith(customer,puff).length
