const player = "p";
const puff="h";
const customer ="c";
const wall ="w";
const wallh="d";
const oven="o";
const crosswall ="g"
const mouse="m"
setLegend(
  [ player,bitmap`
........00......
.......000......
........02......
........22......
......77777.....
......71157.....
......7151700...
...0.075517.0...
....0.71157.0...
......77777.....
.......0..0.....
.......0..0.....
......00.00.....
................
................
................`],
  [ puff,bitmap`
................
................
................
................
................
........66......
.......6666.....
......666666....
......116161....
......111111....
......11111.....
.......1111.....
................
................
................
................`],
  [customer,bitmap`
................
.........0......
........000.....
........0000....
........022.0...
........222..0..
.......99999....
.......99999....
.......99999....
.......9HHHH9...
.......9H9H999..
........0..0....
........0..0....
........0..0....
.......0...0....
..........0.....`],
  [oven,bitmap`
...00000000000..
...01111111110..
...01202020210..
...01020202010..
...01111111110..
...00000000000..
...03033033060..
...03063036030..
...06066066060..
...00000000000..
................
................
................
................
................
................`],
  [wall,bitmap`
.....0000000....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....000LLL0....
.....00LLLL0....
.....0000000....`],
  [wallh,bitmap`
................
................
................
................
................
0000000000000000
0000000000000000
1111111111011111
1111111111111111
1111111111111111
0111111111111111
0000000000000000
................
................
................
................`],
  [crosswall,bitmap`
....00000000....
....01111010....
....01111110....
....01111100....
....01111110....
0000011111100000
0011111111111110
0111111111111110
0111111111111110
0111111111111100
0111111111111110
0000011111100000
....01111110.0..
....01111110....
....01110010....
....00000000....`],
[mouse,bitmap`
................
................
................
................
......00........
.......0........
.......0........
......0.........
......0........0
.....000.......0
.....020.....00.
.....00000..0...
......000000....
......00000.....
.......0000.....
........0.0.....`]
);
//GLOBAL VARIABLES
var score = 0
var isSecretChallenge = false
//SCORE AND LIVES LABELS
addText(`Score: ${score}`,{x: 0, y: 0, color: color`1`}) 
setSolids([wall,wallh,crosswall])
let level = 0
const levels = [
  map`
pw.....mho
.w........
.w.mgdg.w.
....wmw.w.
mwhhg.w.w.
.wohw.w.w.
dgddd.w.w.
......w.w.
.m....w.w.
..ddddg.w.
........w.
h.mdddmdgc`,
  map`
pddddddg
......hw
dddg.m.w
...w...w
.w.w..hw
.w.w...w
.whw..hw
.wow...w
.gdgm.mw
.......c`
];
const currentLevel = levels[level];
setMap(currentLevel);
setSolids([player,crosswall,wall,wallh])
setPushables({
  [ player ]: []
})

//INPUT
onInput("d", () => {
  getFirst(player).x += 1;
})
onInput("a", () => {
  getFirst(player).x -= 1;
})
onInput("w", () => {
  getFirst(player).y -= 1;
})
onInput("s", () => {
  getFirst(player).y += 1;
})
onInput("i", () => {
  resetGame()
})
onInput("j", () => {
  resetGame()
  isSecretChallenge = true
  addText(`Collect the highest\namount of puffs\n   possible to win`, {x: 1, y:Implement the collection mechanism by adding an input function to collect the coin when the player moves over it:


onInput("w", () => {
  const playerSprite = getFirst(player);
  const tileContainingPlayer = getTile(playerSprite.x, playerSprite.y);
  
  // Check if there is a coin on the tile the player is moving to
  const coinsOnTile = tileContainingPlayer.filter(sprite => sprite.type === coin);
  
  if (coinsOnTile.length > 0) {
    // Remove the coin from the tile
    coinsOnTile.forEach(coin => {
      coin.remove();
    });
    // Perform any additional actions you want when a coin is collected
  }let player = getAll(puffs)
  let character = getFirst(player)
  let thisTile = getTile(getFirst(player).x, getFirst(player).y);
  if(thisTile.length > 1){
    if(thisTile[1]._type == "d"){
      if(levelNumber >= levels.length - 1){
        if(score == 36){
        addText(`Congrats! You Win!`, {x: 1, y: 5, color: color`4`})
        addText(`Press 'j' to play\na secret challenge`, {x: 1, y: 8, color: color`6`})
        addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color`4`})
        }
        else if(isSecretChallenge == false && score < 36){
          addText(`Try again. Collect\n      All Coins`, {x: 1, y: 5, color: color `3`})
          addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color `3`})
        }
        else if(score == 9 && isSecretChallenge == true){
          addText(`Congrats! You are\n   the ultimate\n    maze master!`, {x: 1, y: 5, color: color `9`})
          addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color `9`})
        }
        else{
          addText(`Try again, Collect\nthe LEAST amount\n     of coins`, {x: 1, y: 5, color: color `3`})
          addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color`3`})
        } 
      }
      else{
      levelNumber++
      setMap(levels[levelNumber])
      }
    }
  }
  for(let i = 0; i < coins.length; i++){
    if(character.x === coins[i].x && character.y === coins[i].y){
      coins[i].remove()
      playTune(collectedCoin)
      score += 1;
      clearText()
      addText(`Score: ${score}`,{x: 0, y: 0, color: color`4`})
    
    }
  }
  for(let i = 0; i < antiCoins.length; i++){
    if(character.x === antiCoins[i].x && character.y === antiCoins[i].y){
      antiCoins[i].remove()
      playTune(collectedAntiCoin)
      score -= 2;
      clearText()
      addText(`Score: ${score}`,{x: 0, y: 0, color: color`3`})
    
    }
  }

  if(score < 0){
    addText(`Try again. Collect\n  All GOLD Coins`, {x: 1, y: 5, color: color `3`})
    addText(`Press 'i' to reset\n     the game`, {x: 1, y: 11, color: color `3`})
  }
})



//RESETS THE GAME
function resetGame(){
  score = 0
  isSecretChallenge = false
  clearText()
  addText(`Score: ${score}`,{x: 0, y: 0, color: color`4`})
  addText(`   WASD to move\n   'i' to reset\n Collect coins and\n navigate through\n the mazes to win!`, {x: 1, y:5, color: color`D`})
  levelNumber = 0
  setMap(levels[levelNumber])const player = "p";
const puff="h";
const customer ="c";
const wall ="w";
const wallh="d";
const oven="o";
const crosswall ="g"
const mouse="m"
setLegend(
  [ player,bitmap`
........00......
.......000......
........02......
........22......
......77777.....
......71157.....
......7151700...
...0.075517.0...
....0.71157.0...
......77777.....
.......0..0.....
.......0..0.....
......00.00.....
................
................
................`],
  [ puff,bitmap`
................
................
................
................
................
........66......
.......6666.....
......666666....
......116161....
......111111....
......11111.....
.......1111.....
................
................
................
................`],
  [customer,bitmap`
................
.........0......
........000.....
........0000....
........022.0...
........222..0..
.......99999....
.......99999....
.......99999....
.......9HHHH9...
.......9H9H999..
........0..0....
........0..0....
........0..0....
.......0...0....
..........0.....`],
  [oven,bitmap`
...00000000000..
...01111111110..
...01202020210..
...01020202010..
...01111111110..
...00000000000..
...03033033060..
...03063036030..
...06066066060..
...00000000000..
................
................
................
................
................
................`],
  [wall,bitmap`
.....0000000....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....00LLLL0....
.....000LLL0....
.....00LLLL0....
.....0000000....`],
  [wallh,bitmap`
................
................
................
................
................
0000000000000000
0000000000000000
1111111111011111
1111111111111111
1111111111111111
0111111111111111
0000000000000000
................
................
................
................`],
  [crosswall,bitmap`
....00000000....
....01111010....
....01111110....
....01111100....
....01111110....
0000011111100000
0011111111111110
0111111111111110
0111111111111110
0111111111111100
0111111111111110
0000011111100000
....01111110.0..
....01111110....
....01110010....
....00000000....`],
[mouse,bitmap`
................
................
................
................
......00........
.......0........
.......0........
......0.........
......0........0
.....000.......0
.....020.....00.
.....00000..0...
......000000....
......00000.....
.......0000.....
........0.0.....`]
);
//GLOBAL VARIABLES
var score = 0
var isSecretChallenge = false
//SCORE AND LIVES LABELS
addText(`Score: ${score}`,{x: 0, y: 0, color: color`1`}) 
setSolids([wall,wallh,crosswall])
let level = 0
const levels = [
  map`
pw.....mho
.w........
.w.mgdg.w.
....wmw.w.
mwhhg.w.w.
.wohw.w.w.
dgddd.w.w.
......w.w.
.m....w.w.
..ddddg.w.
........w.
h.mdddmdgc`,
  map`
pddddddg
......hw
dddg.m.w
...w...w
.w.w..hw
.w.w...w
.whw..hw
.wow...w
.gdgm.mw
.......c`
];
const currentLevel = levels[level];
setMap(currentLevel);
setSolids([player,crosswall,wall,wallh])
setPushables({
  [ player ]: []
})

//INPUT
onInput("d", () => {
  getFirst(player).x += 1;
})
onInput("a", () => {
  getFirst(player).x -= 1;
})
onInput("w", () => {
  getFirst(player).y -= 1;
})
onInput("s", () => {
  getFirst(player).y += 1;
})
onInput("i", () => {
  resetGame()
})
onInput("j", () => {
  resetGame()
  isSecretChallenge = true
  addText(`Collect the highest\namount of puffs\n   possible to win`, {x: 1, y:Implement the collection mechanism by adding an input function to collect the coin when the player moves over it:


onInput("w", () => {
  const playerSprite = getFirst(player);
  const tileContainingPlayer = getTile(playerSprite.x, playerSprite.y);
  
  // Check if there is a coin on the tile the player is moving to
  const coinsOnTile = tileContainingPlayer.filter(sprite => sprite.type === coin);
  
  if (coinsOnTile.length > 0) {
    // Remove the coin from the tile
    coinsOnTile.forEach(coin => {
      coin.remove();
    });
    // Perform any additional actions you want when a coin is collected
  }let player = getAll(puffs)
  let character = getFirst(player)
  let thisTile = getTile(getFirst(player).x, getFirst(player).y);
  if(thisTile.length > 1){
    if(thisTile[1]._type == "d"){
      if(levelNumber >= levels.length - 1){
        if(score == 36){
        addText(`Congrats! You Win!`, {x: 1, y: 5, color: color`4`})
        addText(`Press 'j' to play\na secret challenge`, {x: 1, y: 8, color: color`6`})
        addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color`4`})
        }
        else if(isSecretChallenge == false && score < 36){
          addText(`Try again. Collect\n      All Coins`, {x: 1, y: 5, color: color `3`})
          addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color `3`})
        }
        else if(score == 9 && isSecretChallenge == true){
          addText(`Congrats! You are\n   the ultimate\n    maze master!`, {x: 1, y: 5, color: color `9`})
          addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color `9`})
        }
        else{
          addText(`Try again, Collect\nthe LEAST amount\n     of coins`, {x: 1, y: 5, color: color `3`})
          addText(`Press 'i' to reset\n     the game`, {x: 1, y: 13, color: color`3`})
        } 
      }
      else{
      levelNumber++
      setMap(levels[levelNumber])
      }
    }
  }
  for(let i = 0; i < coins.length; i++){
    if(character.x === coins[i].x && character.y === coins[i].y){
      coins[i].remove()
      playTune(collectedCoin)
      score += 1;
      clearText()
      addText(`Score: ${score}`,{x: 0, y: 0, color: color`4`})
    
    }
  }
  for(let i = 0; i < antiCoins.length; i++){
    if(character.x === antiCoins[i].x && character.y === antiCoins[i].y){
      antiCoins[i].remove()
      playTune(collectedAntiCoin)
      score -= 2;
      clearText()
      addText(`Score: ${score}`,{x: 0, y: 0, color: color`3`})
    
    }
  }

  if(score < 0){
    addText(`Try again. Collect\n  All GOLD Coins`, {x: 1, y: 5, color: color `3`})
    addText(`Press 'i' to reset\n     the game`, {x: 1, y: 11, color: color `3`})
  }
})



//RESETS THE GAME
function resetGame(){
  score = 0
  isSecretChallenge = false
  clearText()
  addText(`Score: ${score}`,{x: 0, y: 0, color: color`4`})
  addText(`   WASD to move\n   'i' to reset\n Collect coins and\n navigate through\n the mazes to win!`, {x: 1, y:5, color: color`D`})
  levelNumber = 0
  setMap(levels[levelNumber])
